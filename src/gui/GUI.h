// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef GUI_h
#define GUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Check_Browser.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Pack.H>
#include <FL/Fl_Light_Button.H>
#include <queue>
#include <vector>
#include <string>

class GUI {
private:
  // Callback function dedicated to the Pretty Button
  // Change the Text Buffer of Messages to Pretty or Hexa
  static void butPushPretty(Fl_Light_Button*, GUI*);
  static void check_sources(Fl_Widget*, GUI*);

  std::queue<std::vector<std::string>>& q_portsStates;
public:
  GUI(std::queue<std::vector<std::string>>);
  Fl_Double_Window *root;
  // List of possibles MIDI sources
  Fl_Check_Browser *sources;
  Fl_Text_Display *messages;
  // Text Buffer with raw MIDI datas
  Fl_Text_Buffer *buffer_hexa;
  // Text Buffer with prettyfied MIDI datas
  Fl_Text_Buffer *buffer_pretty;
  Fl_Pack *options;
  // Switch display of MIDI Notes Messages On / Off
  Fl_Light_Button *notes;
  // Switch display of MIDI CC Messages On / Off
  Fl_Light_Button *cc;
  // Switch display of MIDI Messages On / Off
  Fl_Light_Button *other;
  // Pretty or Not ?
  Fl_Light_Button *pretty;
};
#endif
